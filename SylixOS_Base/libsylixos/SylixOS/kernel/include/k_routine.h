/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                       SylixOS(TM)
**
**                               Copyright  All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: k_routine.h
**
** 创   建   人: Han.Hui (韩辉)
**
** 文件创建日期: 2006 年 12 月 12 日
**
** 描        述: 这是系统基本程序路径指针类型定义。

** BUG
2007.06.03   修改 PSIGNAL_START_ROUTINE 类型，为信号处理外壳函数
*********************************************************************************************************/

#ifndef __K_ROUTINE_H
#define __K_ROUTINE_H

#undef  __BEOS__
#include <stddef.h>                                                     /*  size_t                      */

#ifndef __ssize_t_defined
typedef LONG        ssize_t;
#define __ssize_t_defined 1
#endif

/*********************************************************************************************************
  访问内核对象唯一允许的方式
*********************************************************************************************************/

typedef ULONG       LW_OBJECT_ID;                                       /*  系统对象 ID 号              */
typedef ULONG       LW_OBJECT_HANDLE;                                   /*  这里的对象句柄和 ID 号等同  */

typedef ULONG       LW_HANDLE;                                          /*  这里的对象句柄和 ID 号等同  */
                                                                        /*  LW_HANDLE 多为应用程序使用  */

#define LW_OBJECT_HANDLE_INVALID    0ul
#define LW_HANDLE_INVALID           0ul                                 /*  API 返回无效句柄            */

/*********************************************************************************************************
  其他
*********************************************************************************************************/

typedef size_t      LW_STACK;                                           /*  字对齐的堆栈类型            */
typedef size_t     *PLW_STACK;

/*********************************************************************************************************
  系统中断返回值
*********************************************************************************************************/
#ifdef __SYLIXOS_KERNEL

#define LW_VECTOR_INVALID   ((irqvect_t)-1l)                            /*  无效中断向量                */

typedef ULONG       irqvect_t;                                          /*  中断向量, ULONG 前向兼容    */

#define LW_IRQ_NONE         0                                           /*  不是本设备中断              */
#define LW_IRQ_HANDLED      1                                           /*  中断已被正确处理            */
#define LW_IRQ_HANDLED_DISV 2                                           /*  中断处理结束并且屏蔽本中断  */
#define LW_IRQ_HANDLED_CONT 3                                           /*  中断已被处理, 但需要继续循环*/

#define LW_IRQ_RETVAL(x)    ((x) != 0)
#define LW_IRQ_RETBREAK(x)  ((x) != LW_IRQ_HANDLED_CONT)

typedef INT         irqreturn_t;

typedef irqreturn_t (*PINT_SVR_ROUTINE)(PVOID pvArg, ULONG ulVector);   /*  系统中断服务函数            */

#endif                                                                  /*  __SYLIXOS_KERNEL            */
/*********************************************************************************************************
  系统使用的函数类型
*********************************************************************************************************/

typedef PVOID       (*PTHREAD_START_ROUTINE)(PVOID pvArg);              /*  系统线程类型定义            */

typedef VOID        (*PCOROUTINE_START_ROUTINE)(PVOID pvArg);           /*  系统协程类型定义            */

typedef	VOID        (*PSIGNAL_START_ROUTINE)(INT iSigNo);               /*  信号处理函数类型定义        */

typedef VOID        (*PKERNEL_START_ROUTINE)(VOID);                     /*  系统内核初始化挂钩函数类型  */

/*********************************************************************************************************
  回调类型
*********************************************************************************************************/

typedef VOID        (*PTIMER_CALLBACK_ROUTINE)(PVOID pvArg);            /*  系统定时器服务函数类型定义  */

#endif                                                                  /*  __K_ROUTINE_H               */
/*********************************************************************************************************
  END
*********************************************************************************************************/
