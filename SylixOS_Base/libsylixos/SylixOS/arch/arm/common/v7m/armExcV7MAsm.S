;/*********************************************************************************************************
;**
;**                                    中国软件开源组织
;**
;**                                   嵌入式实时操作系统
;**
;**                                       SylixOS(TM)
;**
;**                               Copyright  All Rights Reserved
;**
;**--------------文件信息--------------------------------------------------------------------------------
;**
;** 文   件   名: armExcV7MAsm.S
;**
;** 创   建   人: Jiao.JinXing (焦进星)
;**
;** 文件创建日期: 2017 年 11 月 14 日
;**
;** 描        述: ARMv7M 体系构架异常处理.
;*********************************************************************************************************/

#ifndef ASSEMBLY
#define ASSEMBLY 1
#endif

#include <arch/assembler.h>
#include <config/kernel/kernel_cfg.h>
#include <config/system/system_cfg.h>
#include <config/mp/mp_cfg.h>

#include "arch/arm/arch_regs.h"

#if defined(__SYLIXOS_ARM_ARCH_M__)

    FILE_BEGIN()

;/*********************************************************************************************************
;  ARMv7M 体系构架相关异常处理函数
;*********************************************************************************************************/

    IMPORT_LABEL(API_ThreadTcbInter)
    IMPORT_LABEL(API_InterStackBaseGet)
    IMPORT_LABEL(API_InterEnter)
    IMPORT_LABEL(API_InterExit)
    IMPORT_LABEL(API_InterExitNoSched)
    IMPORT_LABEL(archPendSvCtxSaveReg)
    IMPORT_LABEL(_CpuGetCur)

#if LW_CFG_SMP_EN > 0
    IMPORT_LABEL(_SchedSafeStack)
#endif

    IMPORT_LABEL(archResetHandle)
    IMPORT_LABEL(armv7mNMIIntHandle)
    IMPORT_LABEL(armv7mHardFaultHandle)
    IMPORT_LABEL(armv7mMemFaultHandle)
    IMPORT_LABEL(armv7mBusFaultHandle)
    IMPORT_LABEL(armv7mUsageFaultHandle)
    IMPORT_LABEL(armv7mDebugMonitorHandle)
    IMPORT_LABEL(armv7mSysTickIntHandle)
    IMPORT_LABEL(armv7mSvcHandle)
    IMPORT_LABEL(armv7mReservedIntHandle)
    IMPORT_LABEL(armv7mIntHandle)

    EXPORT_LABEL(archNMIIntEntry)
    EXPORT_LABEL(archHardFaultEntry)
    EXPORT_LABEL(archMemFaultEntry)
    EXPORT_LABEL(archBusFaultEntry)
    EXPORT_LABEL(archUsageFaultEntry)
    EXPORT_LABEL(archDebugMonitorEntry)
    EXPORT_LABEL(archPendSVEntry)
    EXPORT_LABEL(archSysTickIntEntry)
    EXPORT_LABEL(archSvcEntry)
    EXPORT_LABEL(archReservedIntEntry)
    EXPORT_LABEL(vector)

;/*********************************************************************************************************
;  这里的异常向量表 vector 声明为弱符号, BSP 可以重新实现异常向量表
;*********************************************************************************************************/

    WEAK(vector)

;/*********************************************************************************************************
;  异常向量表
;*********************************************************************************************************/

    SECTION(.vector)

FUNC_DEF(vector)
    .long   __stack_end                                         ;/*  0  - Reset stack pointer            */
    .long   archResetHandle                                     ;/*  1  - Reset                          */
    .long   archNMIIntEntry                                     ;/*  2  - NMI                            */
    .long   archHardFaultEntry                                  ;/*  3  - HardFault                      */
    .long   archMemFaultEntry                                   ;/*  4  - MemManage                      */
    .long   archBusFaultEntry                                   ;/*  5  - BusFault                       */
    .long   archUsageFaultEntry                                 ;/*  6  - UsageFault                     */
    .long   archReservedIntEntry                                ;/*  7  - Reserved                       */
    .long   archReservedIntEntry                                ;/*  8  - Reserved                       */
    .long   archReservedIntEntry                                ;/*  9  - Reserved                       */
    .long   archReservedIntEntry                                ;/*  10 - Reserved                       */
    .long   archSvcEntry                                        ;/*  11 - SVCall                         */
    .long   archDebugMonitorEntry                               ;/*  12 - Debug Monitor                  */
    .long   archReservedIntEntry                                ;/*  13 - Reserved                       */
    .long   archPendSVEntry                                     ;/*  14 - PendSV                         */
    .long   archSysTickIntEntry                                 ;/*  15 - SysTick                        */
    .irp    Id,                                       \
                                   16,  17,  18,  19, \
     20,  21,  22,  23,  24,  25,  26,  27,  28,  29, \
     30,  31,  32,  33,  34,  35,  36,  37,  38,  39, \
     40,  41,  42,  43,  44,  45,  46,  47,  48,  49, \
     50,  51,  52,  53,  54,  55,  56,  57,  58,  59, \
     60,  61,  62,  63,  64,  65,  66,  67,  68,  69, \
     70,  71,  72,  73,  74,  75,  76,  77,  78,  79, \
     80,  81,  82,  83,  84,  85,  86,  87,  88,  89, \
     90,  91,  92,  93,  94,  95,  96,  97,  98,  99, \
    100, 101, 102, 103, 104, 105, 106, 107, 108, 109, \
    110, 111, 112, 113, 114, 115, 116, 117, 118, 119, \
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, \
    130, 131, 132, 133, 134, 135, 136, 137, 138, 139, \
    140, 141, 142, 143, 144, 145, 146, 147, 148, 149, \
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, \
    160, 161, 162, 163, 164, 165, 166, 167, 168, 169, \
    170, 171, 172, 173, 174, 175, 176, 177, 178, 179, \
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, \
    190, 191, 192, 193, 194, 195, 196, 197, 198, 199, \
    200, 201, 202, 203, 204, 205, 206, 207, 208, 209, \
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, \
    220, 221, 222, 223, 224, 225, 226, 227, 228, 229, \
    230, 231, 232, 233, 234, 235, 236, 237, 238, 239, \
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, \
    250, 251, 252, 253, 254, 255
    .long   archIntEntry\Id
    .endr
    FUNC_END()

;/*********************************************************************************************************
;  异常入口函数
;*********************************************************************************************************/

    SECTION(.text)

#if LW_CFG_CORTEX_M_SVC_SWITCH > 0
#include "armExcV7MSvcAsm.S"
#else
#include "armExcV7MPendSvAsm.S"
#endif

;/*********************************************************************************************************
;  NMI 中断入口函数
;*********************************************************************************************************/

FUNC_DEF(archNMIIntEntry)
    ;/*
    ; * R0 用于记录异常号
    ; */
    IRQ_ENTRY   2   armv7mNMIIntHandle
    FUNC_END()

;/*********************************************************************************************************
;  SysTick 中断入口函数
;*********************************************************************************************************/

FUNC_DEF(archSysTickIntEntry)
    IRQ_ENTRY   15  armv7mSysTickIntHandle
    FUNC_END()

;/*********************************************************************************************************
;  Hard Fault 入口函数
;*********************************************************************************************************/

FUNC_DEF(archHardFaultEntry)
    TRAP_ENTRY  3   armv7mHardFaultHandle
    FUNC_END()

;/*********************************************************************************************************
;  Mem Fault 入口函数
;*********************************************************************************************************/

FUNC_DEF(archMemFaultEntry)
    TRAP_ENTRY  4   armv7mMemFaultHandle
    FUNC_END()

;/*********************************************************************************************************
;  Bus Fault 入口函数
;*********************************************************************************************************/

FUNC_DEF(archBusFaultEntry)
    TRAP_ENTRY  5   armv7mBusFaultHandle
    FUNC_END()

;/*********************************************************************************************************
;  Usage Fault 入口函数
;*********************************************************************************************************/

FUNC_DEF(archUsageFaultEntry)
    TRAP_ENTRY  6   armv7mUsageFaultHandle
    FUNC_END()

;/*********************************************************************************************************
;  Reserved 中断入口函数
;*********************************************************************************************************/

FUNC_DEF(archReservedIntEntry)
    TRAP_ENTRY  7   armv7mReservedIntHandle
    FUNC_END()

;/*********************************************************************************************************
;  Debug Monitor 入口函数
;*********************************************************************************************************/

FUNC_DEF(archDebugMonitorEntry)
    TRAP_ENTRY  12  armv7mDebugMonitorHandle
    FUNC_END()

;/*********************************************************************************************************
;  16 ~ 255 号中断入口函数
;*********************************************************************************************************/

    .irp        Id,                                   \
                                   16,  17,  18,  19, \
     20,  21,  22,  23,  24,  25,  26,  27,  28,  29, \
     30,  31,  32,  33,  34,  35,  36,  37,  38,  39, \
     40,  41,  42,  43,  44,  45,  46,  47,  48,  49, \
     50,  51,  52,  53,  54,  55,  56,  57,  58,  59, \
     60,  61,  62,  63,  64,  65,  66,  67,  68,  69, \
     70,  71,  72,  73,  74,  75,  76,  77,  78,  79, \
     80,  81,  82,  83,  84,  85,  86,  87,  88,  89, \
     90,  91,  92,  93,  94,  95,  96,  97,  98,  99, \
    100, 101, 102, 103, 104, 105, 106, 107, 108, 109, \
    110, 111, 112, 113, 114, 115, 116, 117, 118, 119, \
    120, 121, 122, 123, 124, 125, 126, 127, 128, 129, \
    130, 131, 132, 133, 134, 135, 136, 137, 138, 139, \
    140, 141, 142, 143, 144, 145, 146, 147, 148, 149, \
    150, 151, 152, 153, 154, 155, 156, 157, 158, 159, \
    160, 161, 162, 163, 164, 165, 166, 167, 168, 169, \
    170, 171, 172, 173, 174, 175, 176, 177, 178, 179, \
    180, 181, 182, 183, 184, 185, 186, 187, 188, 189, \
    190, 191, 192, 193, 194, 195, 196, 197, 198, 199, \
    200, 201, 202, 203, 204, 205, 206, 207, 208, 209, \
    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, \
    220, 221, 222, 223, 224, 225, 226, 227, 228, 229, \
    230, 231, 232, 233, 234, 235, 236, 237, 238, 239, \
    240, 241, 242, 243, 244, 245, 246, 247, 248, 249, \
    250, 251, 252, 253, 254, 255
    EXPORT_LABEL(archIntEntry\Id)
FUNC_DEF(archIntEntry\Id)
    IRQ_ENTRY   \Id   armv7mIntHandle
    FUNC_END()
    .endr

    FILE_END()

#endif
;/*********************************************************************************************************
;  END
;*********************************************************************************************************/
