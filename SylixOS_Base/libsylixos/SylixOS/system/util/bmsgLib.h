/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: bmsgLib.h
**
** 创   建   人: Han.Hui (韩辉)
**
** 文件创建日期: 2013 年 10 月 02 日
**
** 描        述: 成块消息缓冲区.
*********************************************************************************************************/

#ifndef __BMSGLIB_H
#define __BMSGLIB_H

/*********************************************************************************************************
  成块消息缓冲区结构
*********************************************************************************************************/

typedef struct {
    PUCHAR              BM_pucBuffer;                                   /*  缓冲区首地址                */
    size_t              BM_stSize;                                      /*  缓冲区大小                  */
    size_t              BM_stLeft;                                      /*  剩余空间大小                */
    PUCHAR              BM_pucPut;                                      /*  写入指针                    */
    PUCHAR              BM_pucGet;                                      /*  读出指针                    */
} LW_BMSG;
typedef LW_BMSG        *PLW_BMSG;

/*********************************************************************************************************
  成块消息缓冲区结构
*********************************************************************************************************/

#define LW_BMSG_MIN_SIZE    64                                          /*  最小缓冲区大小              */

/*********************************************************************************************************
  功能声明
*********************************************************************************************************/

PLW_BMSG  _bmsgCreate(size_t  stSize);

VOID      _bmsgDelete(PLW_BMSG  pbmsg);

INT       _bmsgPut(PLW_BMSG  pbmsg, CPVOID  pvMsg, size_t  stSize);

INT       _bmsgGet(PLW_BMSG  pbmsg, PVOID  pvMsg, size_t  stBufferSize);

VOID      _bmsgFlush(PLW_BMSG  pbmsg);

INT       _bmsgIsEmpty(PLW_BMSG  pbmsg);

INT       _bmsgIsFull(PLW_BMSG  pbmsg);

size_t    _bmsgSizeGet(PLW_BMSG  pbmsg);

INT       _bmsgFreeByte(PLW_BMSG  pbmsg);

INT       _bmsgNBytes(PLW_BMSG  pbmsg);

INT       _bmsgNBytesNext(PLW_BMSG  pbmsg);

#endif                                                                  /*  __BMSGLIB_H                 */
/*********************************************************************************************************
  END
*********************************************************************************************************/
